bs_package_flags = -bs-package-name let-anything
src_root_dir = /Users/baransu/Documents/Reason/let-anything
bsc = /Users/baransu/Documents/Reason/let-anything/node_modules/bsb-native/lib/bsc.exe
bsdep = /Users/baransu/Documents/Reason/let-anything/node_modules/bsb-native/lib/bsb_helper.exe
warnings = -w -30-40+6+7+27+32..39+44+45+101-6+7-26-27-32..40-28-44-45 -warn-error +8
bsc_flags = -bs-D BSB_BACKEND="native" -bs-D OS_TYPE="Darwin" -nostdlib -I '/Users/baransu/Documents/Reason/let-anything/node_modules/bsb-native/lib/ocaml' -color always -no-alias-deps
ppx_flags = -ppx /Users/baransu/Documents/Reason/let-anything/node_modules/bsb-native/lib/belt_bsppx.exe
bs_package_includes = -I /Users/baransu/Documents/Reason/let-anything/node_modules/bsb-native/lib/ocaml/native 
bs_package_dev_includes = 
namespace = 
build_artifacts_dir = /Users/baransu/Documents/Reason/let-anything
ocaml_flags = -I /Users/baransu/Documents/Reason/let-anything/node_modules/bsb-native/vendor/ocaml/lib/ocaml/compiler-libs  -no-alias-deps   -g   -bin-annot   -color   always
ocaml_linker_flags = 
bs_super_errors_ocamlfind = -bs-super-errors
bs_super_errors = -bs-super-errors
external_deps_for_linking = 
ocamlc = /Users/baransu/Documents/Reason/let-anything/node_modules/bsb-native/vendor/ocaml/ocamlc.opt
ocamlopt = /Users/baransu/Documents/Reason/let-anything/node_modules/bsb-native/vendor/ocaml/ocamlopt.opt
ocamlfind = 
ocamlfind_dependencies = 
ocaml_dependencies = -add-ocaml-dependency bigarray -add-ocaml-dependency compiler-libs -add-ocaml-dependency str -add-ocaml-dependency unix
open_flag = 
bsb_helper_verbose = 
bsb_dir_group = 0
bsc_group_1_includes = -I tests
refmt = /Users/baransu/Documents/Reason/let-anything/node_modules/bsb-native/lib/refmt.exe
reason_react_jsx = 
refmt_flags = --print binary
ocaml_lib_includes = -I /Users/baransu/Documents/Reason/let-anything/node_modules/bsb-native/vendor/ocaml/lib/ocaml -I src
bsc_lib_includes = -I /Users/baransu/Documents/Reason/let-anything/node_modules/bsb-native/vendor/ocaml/lib/ocaml -I src
rule build_ast_and_module_sets_from_re_gen_simple
  command = ${bsc} -pp "${refmt} ${refmt_flags}" ${reason_react_jsx}  ${ppx_flags} ${bs_super_errors} ${warnings} ${bsc_flags} -c -o ${out} -bs-syntax-only -bs-simple-binary-ast -bs-binary-ast -impl ${in}
  description = [34mBuilding[39m [2m${out}[22m
build tests/Tests.mlast : build_ast_and_module_sets_from_re_gen_simple $src_root_dir/tests/Tests.re |  ./let_anything.native
  ppx_flags = $ppx_flags -ppx "./let_anything.native -bsb-backend native"
rule build_deps_native
  command = ${bsdep} ${namespace} -g ${bsb_dir_group} -MD-native ${in}
  description = [34mBuilding[39m [2m${out}[22m
build tests/Tests.mlast.d : build_deps_native tests/Tests.mlast
  bsb_dir_group = 1
rule build_cmx_cmi_native
  command = ${ocamlfind}${ocamlopt} ${open_flag} ${bs_super_errors_ocamlfind} ${bs_package_includes} ${ocaml_lib_includes} ${bsc_extra_includes} ${ocamlfind_dependencies} ${ocaml_flags} -o ${out} ${warnings} -g -c -intf-suffix .mliast_simple -impl ${in}_simple ${postbuild}
  depfile = ${in}.d
  description = [34mBuilding[39m [2m${out}[22m
build tests/Tests.cmx |  tests/Tests.cmi : build_cmx_cmi_native tests/Tests.mlast |  tests/Tests.mlast.d
  bsc_flags = $bsc_flags -bs-re-out -bs-super-errors
  bs_package_includes = $bs_package_includes $bs_package_dev_includes
  bsc_extra_includes = $bsc_group_1_includes
build src/Let_anything.mlast : build_ast_and_module_sets_from_re_gen_simple $src_root_dir/src/Let_anything.re
  ppx_flags = $ppx_flags -ppx /Users/baransu/Documents/Reason/let-anything/node_modules/bsb-native/lib/bs_ppx_tools.exe
build src/Let_anything.mlast.d : build_deps_native src/Let_anything.mlast
build src/Let_anything.cmx |  src/Let_anything.cmi : build_cmx_cmi_native src/Let_anything.mlast |  src/Let_anything.mlast.d
  ocaml_flags = $ocaml_flags -I /Users/baransu/Documents/Reason/let-anything/node_modules/bsb-native/vendor/ocaml/lib/ocaml/compiler-libs
  bsc_flags = $bsc_flags -bs-re-out -bs-super-errors
rule linking_native
  command = ${bsdep} ${bsb_helper_verbose} ${ocaml_dependencies} ${ocaml_linker_flags} ${warnings} ${namespace} -bs-main ${main_module} ${bs_super_errors} ${static_libraries} ${ocamlfind_dependencies} ${external_deps_for_linking} ${in} -link-native ${out}
  description = [34mBuilding[39m [2m${out}[22m
build let_anything.native : linking_native  src/Let_anything.mlast |  src/Let_anything.cmi src/Let_anything.cmx
  external_deps_for_linking = 
  main_module = Let_anything
  static_libraries = 
build tests.native : linking_native  tests/Tests.mlast |  tests/Tests.cmi tests/Tests.cmx
  main_module = Tests
  static_libraries = 
build build.ninja : phony  ||  src/Let_anything.mlast.d tests/Tests.mlast.d
